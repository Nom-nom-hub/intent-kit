name: Build and Release CLI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release-cli:
    name: Build CLI for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: linux
            asset_name: intent-cli-linux
          - os: windows-latest
            target: windows
            asset_name: intent-cli-windows.exe
          - os: macos-latest
            target: macos
            asset_name: intent-cli-macos

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller build

      - name: Build package
        run: python -m build

      - name: Build CLI executable with PyInstaller
        run: |
          if [ "${{ matrix.target }}" = "windows" ]; then
            pyinstaller --onefile --name ${{ matrix.asset_name }} src/intent_kit/__main__.py
          else
            pyinstaller --onefile --name ${{ matrix.asset_name }} src/intent_kit/__main__.py
          fi

      - name: Upload CLI executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.target == 'windows' && 'application/vnd.microsoft.portable-executable' || 'application/octet-stream' }}